<common:PageBase x:Class="Brook.DuDuRiBao.Pages.MainPage"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:common="using:Brook.DuDuRiBao.Common"
                 xmlns:convert="using:Brook.DuDuRiBao.Converters"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:data="using:Brook.DuDuRiBao.Models"
                 xmlns:element="using:Brook.DuDuRiBao.Elements"
                 xmlns:llm="using:LLM"
                 xmlns:local="using:Brook.DuDuRiBao.Pages"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:utils="using:Brook.DuDuRiBao.Utils"
                 xmlns:vm="using:Brook.DuDuRiBao.ViewModels"
                 xmlns:xp="using:XP"
                 mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainViewModel />
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Elements/Story.xaml" />
                <ResourceDictionary Source="../Elements/HotCircle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <utils:Config x:Key="Config" />

            <convert:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <convert:BooleanReverseConverter x:Key="BooleanReverseConverter" />

            <common:StoryDataTemplateSelector x:Key="StoryDataTemplateSelector"
                                              FavoriteTemplate="{StaticResource Favorite}"
                                              HotArticleTemplate="{StaticResource HotArticle}"
                                              NormalTemplate="{StaticResource Story}" />

            <!--<common:CircleDataTemplateSelector x:Key="CircleDataTemplateSelector"
                                               CircleImageTemplate="{StaticResource HotCircleItemWithImage}"
                                               CircleWordTemplate="{StaticResource HotCircleItemWithWord}" />-->

        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="MainGrid" SizeChanged="Page_SizeChanged">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <common:AdaptiveTriggerExtended ExtraCondition="{x:Bind IsCommentPanelOpen}"
                                                        MinWindowWidth="{Binding Source={StaticResource Config},
                                                                                 Path=MinWidth_UIStatus_All}"
                                                        TargetElement="{x:Bind Path=MainGrid}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StoryContentView.IsPaneOpen" Value="true" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <common:AdaptiveTriggerExtended ExtraCondition="{x:Bind IsCommentPanelOpen, Converter={StaticResource BooleanReverseConverter}}"
                                                        MinWindowWidth="{Binding Source={StaticResource Config},
                                                                                 Path=MinWidth_UIStatus_All}"
                                                        TargetElement="{x:Bind Path=MainGrid}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StoryContentView.IsPaneOpen" Value="false" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{Binding Source={StaticResource Config}, Path=MinWidth_UIStatus_ListAndContent}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StoryContentView.IsPaneOpen" Value="false" />
                        <Setter Target="StoryContentView.DisplayMode" Value="Overlay" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{Binding Source={StaticResource Config}, Path=MinWidth_UIStatus_List}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StoryContentView.Visibility" Value="Collapsed" />
                        <Setter Target="MainListView.Width" Value="Auto" />
                        <Setter Target="MainListView.(RelativePanel.AlignRightWithPanel)" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <element:ToolBar Category="{x:Bind VM.CategoryName, Mode=OneWay}" Host="MainPage" />
        <SplitView x:Name="MainView"
                   Grid.Row="1"
                   Background="{ThemeResource BrushListBackground}"
                   DisplayMode="Overlay"
                   OpenPaneLength="{StaticResource WidthCategoryPanel}"
                   PaneBackground="White">
            <SplitView.Pane>
                <RelativePanel Background="{ThemeResource BrushPrimary}">
                    <xp:XPButton x:Uid="Home"
                                 x:Name="Home"
                                 Width="{ThemeResource WidthStoryPanel}"
                                 Height="48"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 Click="Home_Click"
                                 Content=""
                                 Foreground="White"
                                 IconInterval="12"
                                 IconPosition="Left"
                                 Padding="14, 0, 0, 0"
                                 PointerOverBackground="{StaticResource BrushPointerOver}"
                                 PressedBackground="{StaticResource BrushPressed}"
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.AlignTopWithPanel="True">
                        <xp:XPButton.Icon>
                            <FontIcon FontFamily="/Assets/Fonts/fontawesome-webfont.ttf#FontAwesome" Glyph="&#xf015;" />
                        </xp:XPButton.Icon>
                    </xp:XPButton>
                    <xp:XPButton x:Uid="Favorite"
                                 x:Name="MyFav"
                                 Width="{ThemeResource WidthStoryPanel}"
                                 Height="48"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 Click="MyFav_Click"
                                 Content=""
                                 Foreground="White"
                                 IconInterval="12"
                                 IconPosition="Left"
                                 Padding="14, 0, 0, 0"
                                 PointerOverBackground="{StaticResource BrushPointerOver}"
                                 PressedBackground="{StaticResource BrushPressed}"
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.Below="Home">
                        <xp:XPButton.Icon>
                            <FontIcon FontFamily="/Assets/Fonts/fontawesome-webfont.ttf#FontAwesome" Glyph="&#xf005;" />
                        </xp:XPButton.Icon>
                    </xp:XPButton>
                    <xp:XPButton x:Uid="HotArticle"
                                 x:Name="HotArticle"
                                 Width="{ThemeResource WidthStoryPanel}"
                                 Height="48"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 Click="HotArticle_Click"
                                 Content=""
                                 Foreground="White"
                                 IconInterval="12"
                                 IconPosition="Left"
                                 Padding="14, 0, 0, 0"
                                 PointerOverBackground="{StaticResource BrushPointerOver}"
                                 PressedBackground="{StaticResource BrushPressed}"
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.Below="MyFav">
                        <xp:XPButton.Icon>
                            <FontIcon FontFamily="/Assets/Fonts/fontawesome-webfont.ttf#FontAwesome" Glyph="&#xf004;" />
                        </xp:XPButton.Icon>
                    </xp:XPButton>
                    <RelativePanel x:Name="HotCircle"
                                   VerticalAlignment="Center"
                                   Background="{ThemeResource BrushPrimaryDark}"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.AlignRightWithPanel="True"
                                   RelativePanel.Below="HotArticle">
                        <TextBlock x:Uid="HotCircle"
                                   Margin="14, 0, 0, 0"
                                   FontSize="12"
                                   Foreground="{ThemeResource BrushHotCircleTitle}"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.AlignVerticalCenterWithPanel="True"
                                   Text="" />
                        <xp:XPButton x:Uid="HotCircleRefresh"
                                     Height="24"
                                     Margin="12, 0, 0, 0"
                                     Background="Transparent"
                                     BorderThickness="0"
                                     Click="RefershHotCircle_Click"
                                     Content=""
                                     CornerRadius="4"
                                     FontSize="12"
                                     Foreground="{ThemeResource BrushHotCircleTitle}"
                                     IconInterval="12"
                                     IconPosition="Left"
                                     IconSize="12"
                                     PointerOverBackground="{StaticResource BrushPointerOver}"
                                     PressedBackground="{StaticResource BrushPressed}"
                                     RelativePanel.AlignRightWithPanel="True"
                                     RelativePanel.AlignVerticalCenterWithPanel="True">
                            <xp:XPButton.Icon>
                                <FontIcon FontFamily="/Assets/Fonts/fontawesome-webfont.ttf#FontAwesome" Glyph="&#xf021;" />
                            </xp:XPButton.Icon>
                        </xp:XPButton>
                    </RelativePanel>
                    <ListView x:Name="HotCircleListView"
                              Margin="0, 12, 0, 0"
                              IsItemClickEnabled="True"
                              ItemClick="HotCircleListView_ItemClick"
                              ItemTemplate="{StaticResource HotCircleItem}"
                              ItemsSource="{x:Bind VM.HotCircles}"
                              RelativePanel.AlignBottomWithPanel="True"
                              RelativePanel.AlignLeftWithPanel="True"
                              RelativePanel.AlignRightWithPanel="True"
                              RelativePanel.Below="HotCircle"
                              ScrollViewer.VerticalScrollBarVisibility="Hidden"
                              SelectionMode="Single">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Margin" Value="0, 0, 0, 2" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </RelativePanel>
            </SplitView.Pane>
            <RelativePanel>
                <llm:LLMListView x:Name="MainListView"
                                 Width="{StaticResource WidthStoryPanel}"
                                 CanPullToRefresh="True"
                                 IsItemClickEnabled="True"
                                 ItemClick="MainListView_ItemClick"
                                 ItemTemplateSelector="{StaticResource StoryDataTemplateSelector}"
                                 ItemsSource="{x:Bind VM.StoryDataList}"
                                 LoadMoreProgressBarBrush="{ThemeResource BrushPrimaryDark}"
                                 RefreshButtonBackground="{ThemeResource BrushPrimary}"
                                 RefreshButtonVisibility="{x:Bind IsDesktopDevice, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 RefreshProgressBarBrush="{ThemeResource BrushPrimaryDark}"
                                 RefreshProgressRingBrush="{ThemeResource BrushPrimaryDark}"
                                 RelativePanel.AlignLeftWithPanel="True"
                                 ScrollViewer.IsVerticalRailEnabled="True"
                                 SelectionMode="Single">
                    <llm:LLMListView.ItemContainerStyle>
                        <Style TargetType="llm:LLMListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0, 0, 0, 6" />
                        </Style>
                    </llm:LLMListView.ItemContainerStyle>
                </llm:LLMListView>
                <SplitView x:Name="StoryContentView"
                           CompactPaneLength="0"
                           DisplayMode="Inline"
                           IsPaneOpen="False"
                           OpenPaneLength="{StaticResource WidthCommentPanel}"
                           PaneBackground="{ThemeResource BrushListBackground}"
                           PanePlacement="Right"
                           RelativePanel.AlignBottomWithPanel="True"
                           RelativePanel.AlignRightWithPanel="True"
                           RelativePanel.AlignTopWithPanel="True"
                           RelativePanel.RightOf="MainListView">
                    <SplitView.Pane>
                        <Frame x:Name="CommentFrame" />
                    </SplitView.Pane>
                    <Frame x:Name="MainContentFrame" />
                </SplitView>
            </RelativePanel>
        </SplitView>
    </Grid>
</common:PageBase>
