<common:PageBase x:Class="Brook.DuDuRiBao.Pages.MainPage"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:common="using:Brook.DuDuRiBao.Common"
                 xmlns:convert="using:Brook.DuDuRiBao.Converters"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:data="using:Brook.DuDuRiBao.Models"
                 xmlns:element="using:Brook.DuDuRiBao.Elements"
                 xmlns:llm="using:LLM"
                 xmlns:local="using:Brook.DuDuRiBao.Pages"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:utils="using:Brook.DuDuRiBao.Utils"
                 xmlns:vm="using:Brook.DuDuRiBao.ViewModels"
                 xmlns:xp="using:XP"
                 mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainViewModel />
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Elements/Story.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <utils:Config x:Key="Config" />

            <convert:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <convert:BooleanReverseConverter x:Key="BooleanReverseConverter" />

            <common:StoryDataTemplateSelector x:Key="StoryDataTemplateSelector"
                                              GroupTemplate="{StaticResource GroupHeader}"
                                              NormalTemplate="{StaticResource Story}"
                                              ReferTemplate="{StaticResource StoryWithoutImage}" />

            <DataTemplate x:Key="CategoryItem">
                <TextBlock Margin="12, 0, 0, 0" Text="{Binding name}" />
            </DataTemplate>

        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="MainGrid" SizeChanged="Page_SizeChanged">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <common:AdaptiveTriggerExtended ExtraCondition="{x:Bind IsCommentPanelOpen}"
                                                        MinWindowWidth="{Binding Source={StaticResource Config},
                                                                                 Path=MinWidth_UIStatus_All}"
                                                        TargetElement="{x:Bind Path=MainGrid}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StoryContentView.IsPaneOpen" Value="true" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <common:AdaptiveTriggerExtended ExtraCondition="{x:Bind IsCommentPanelOpen, Converter={StaticResource BooleanReverseConverter}}"
                                                        MinWindowWidth="{Binding Source={StaticResource Config},
                                                                                 Path=MinWidth_UIStatus_All}"
                                                        TargetElement="{x:Bind Path=MainGrid}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StoryContentView.IsPaneOpen" Value="false" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{Binding Source={StaticResource Config}, Path=MinWidth_UIStatus_ListAndContent}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StoryContentView.IsPaneOpen" Value="false" />
                        <Setter Target="StoryContentView.DisplayMode" Value="Overlay" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{Binding Source={StaticResource Config}, Path=MinWidth_UIStatus_List}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StoryContentView.Visibility" Value="Collapsed" />
                        <Setter Target="MainListView.Width" Value="Auto" />
                        <Setter Target="MainListView.(RelativePanel.AlignRightWithPanel)" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!--<element:ToolBar Category="{x:Bind VM.CategoryName, Mode=OneWay}" Host="MainPage" />-->
        <SplitView x:Name="MainView"
                   Grid.Row="1"
                   Background="{ThemeResource BrushListBackground}"
                   DisplayMode="Overlay"
                   OpenPaneLength="{StaticResource WidthCategoryPanel}"
                   PaneBackground="White">
            <SplitView.Pane>
                <RelativePanel>
                    <RelativePanel x:Name="LoginPanel"
                                   Height="{StaticResource HeightLoginPanel}"
                                   Background="{ThemeResource BrushPrimary}"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.AlignRightWithPanel="True"
                                   RelativePanel.AlignTopWithPanel="True">
                        <Ellipse x:Name="UserPhoto"
                                 Width="48"
                                 Height="48"
                                 Margin="20, 4, 0, 0"
                                 Tapped="Login">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{x:Bind VM.UserPhotoUrl, Mode=OneWay}" Stretch="Fill" />
                            </Ellipse.Fill>
                        </Ellipse>
                        <xp:XPButton x:Name="UserName"
                                     Margin="10, 4, 0, 0"
                                     Background="Transparent"
                                     Click="Login"
                                     Content="{x:Bind VM.UserName, Mode=OneWay}"
                                     FontSize="16"
                                     Foreground="White"
                                     IconPosition="NoIcon"
                                     PointerOverBackground="{StaticResource BrushPointerOver}"
                                     PressedBackground="{StaticResource BrushPressed}"
                                     RelativePanel.AlignVerticalCenterWith="UserPhoto"
                                     RelativePanel.RightOf="UserPhoto" />
                        <xp:XPButton x:Uid="Favorite"
                                     x:Name="MyFav"
                                     Margin="12, 0, 0, 12"
                                     Background="Transparent"
                                     BorderThickness="0"
                                     Click="MyFav_Click"
                                     Content=""
                                     Foreground="White"
                                     IconInterval="12"
                                     IconPosition="Left"
                                     PointerOverBackground="{StaticResource BrushPointerOver}"
                                     PressedBackground="{StaticResource BrushPressed}"
                                     RelativePanel.AlignBottomWithPanel="True">
                            <xp:XPButton.Icon>
                                <FontIcon FontFamily="/Assets/Fonts/fontawesome-webfont.ttf#FontAwesome" Glyph="&#xf005;" />
                            </xp:XPButton.Icon>
                        </xp:XPButton>
                        <xp:XPButton x:Uid="DownloadOffline"
                                     x:Name="DownloadButton"
                                     Margin="0, 0, 12, 12"
                                     Background="Transparent"
                                     BorderThickness="0"
                                     Click="DownloadButton_Click"
                                     Content=""
                                     Foreground="White"
                                     IconInterval="12"
                                     IconPosition="Left"
                                     PointerOverBackground="{StaticResource BrushPointerOver}"
                                     PressedBackground="{StaticResource BrushPressed}"
                                     RelativePanel.AlignBottomWithPanel="True"
                                     RelativePanel.AlignRightWithPanel="True">
                            <xp:XPButton.Icon>
                                <FontIcon FontFamily="/Assets/Fonts/fontawesome-webfont.ttf#FontAwesome" Glyph="&#xf019;" />
                            </xp:XPButton.Icon>
                        </xp:XPButton>
                    </RelativePanel>
                    <ListView x:Name="CategoryListView"
                              Margin="0, 12, 0, 0"
                              IsItemClickEnabled="True"
                              ItemClick="CategoryListView_ItemClick"
                              ItemTemplate="{StaticResource CategoryItem}"
                              RelativePanel.AlignBottomWithPanel="True"
                              RelativePanel.AlignLeftWithPanel="True"
                              RelativePanel.AlignRightWithPanel="True"
                              RelativePanel.Below="LoginPanel"
                              SelectionMode="Single" />
                </RelativePanel>
            </SplitView.Pane>
            <RelativePanel>
                <llm:LLMListView x:Name="MainListView"
                                 Width="{StaticResource WidthStoryPanel}"
                                 CanPullToRefresh="True"
                                 IsItemClickEnabled="True"
                                 ItemClick="MainListView_ItemClick"
                                 ItemTemplateSelector="{StaticResource StoryDataTemplateSelector}"
                                 ItemsSource="{x:Bind VM.StoryDataList}"
                                 LoadMoreProgressBarBrush="{ThemeResource BrushPrimaryDark}"
                                 RefreshButtonBackground="{ThemeResource BrushPrimary}"
                                 RefreshButtonVisibility="{x:Bind IsDesktopDevice, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 RefreshProgressBarBrush="{ThemeResource BrushPrimaryDark}"
                                 RefreshProgressRingBrush="{ThemeResource BrushPrimaryDark}"
                                 RelativePanel.AlignLeftWithPanel="True"
                                 SelectionMode="Single">
                    <llm:LLMListView.ItemContainerStyle>
                        <Style TargetType="llm:LLMListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0, 0, 0, 6" />
                        </Style>
                    </llm:LLMListView.ItemContainerStyle>
                </llm:LLMListView>
                <SplitView x:Name="StoryContentView"
                           CompactPaneLength="0"
                           DisplayMode="Inline"
                           IsPaneOpen="False"
                           OpenPaneLength="{StaticResource WidthCommentPanel}"
                           PaneBackground="{ThemeResource BrushListBackground}"
                           PanePlacement="Right"
                           RelativePanel.AlignBottomWithPanel="True"
                           RelativePanel.AlignRightWithPanel="True"
                           RelativePanel.AlignTopWithPanel="True"
                           RelativePanel.RightOf="MainListView">
                    <SplitView.Pane>
                        <Frame x:Name="CommentFrame" />
                    </SplitView.Pane>
                    <Frame x:Name="MainContentFrame" />
                </SplitView>
            </RelativePanel>
        </SplitView>
    </Grid>
</common:PageBase>
